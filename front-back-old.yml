apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
data:
  DATABASE_URI: "mongodb://mongo-service:27017/period-tracker"

---

apiVersion: v1
kind: Secret
metadata:
  name: backend-secret
type: Opaque
stringData:
  JWT_SECRET: "secretKey"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: periodtracker-front
spec:
  replicas: 1
  selector:
    matchLabels:
      app: periodtracker-front
  template:
    metadata:
      labels:
        app: periodtracker-front
    spec:
      containers:
      - name: periodtracker-front
        image: periodtracker-front
        imagePullPolicy: Always
---

apiVersion: v1
kind: Service
metadata:
  name: periodtracker-front-service
spec:
  ports:
    - name: http
      targetPort: 3000
      port: 3000
  type: NodePort
  selector:
    app: periodtracker-front

# CORS
---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: backend-virtualservice
spec:
  hosts:
    - backend-service # le service
  http:
    - match:
        - uri:
            prefix: "/"
      corsPolicy:
        allowOrigins:
          - exact: "http://localhost:3000"
        allowMethods:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS
        allowHeaders:
          - Authorization
          - Content-Type
        exposeHeaders:
          - Authorization
          - Content-Length
        maxAge: "24h"
        allowCredentials: true
      route:
        - destination:
            host: backend-service.default.svc.cluster.local #le service
            port:
              number: 80

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: mongodb-virtualservice
spec:
  hosts:
    - mongodb-service  # Nom du service MongoDB
  tcp:
    - match:
        - port: 27017  # Port par d√©faut de MongoDB
      route:
        - destination:
            host: mongodb-service
            port:
              number: 27017